# Generated by Django 5.0.6 on 2024-05-30 00:12

import datetime
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('client', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datatime', models.DateTimeField(verbose_name='Дата и время попытки')),
                ('status', models.CharField(choices=[('Успешно', 'Успешно'), ('Безуспешно', 'Безуспешно')], verbose_name='Статус')),
                ('answer_mail_server', models.TextField(verbose_name='Ответ почтового сервера')),
            ],
            options={
                'verbose_name': 'Попытка',
                'verbose_name_plural': 'Попытки',
            },
        ),
        migrations.CreateModel(
            name='Mailing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('data_mailing', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('sent_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата отправки')),
                ('data_mailing_finish', models.DateTimeField(default=datetime.datetime(2025, 5, 30, 0, 12, 56, 814934, tzinfo=datetime.timezone.utc), verbose_name='Дата завершения')),
                ('periodicity', models.CharField(choices=[('Один раз', 'Один раз'), ('Ежедневно', 'Ежедневно'), ('Еженедельно', 'Еженедельно'), ('Ежемесячно', 'Ежемесячно')], default='Один раз', verbose_name='Периодичность')),
                ('status', models.CharField(choices=[('Создана', 'Создана'), ('Запущена', 'Запущена'), ('Завершена', 'Завершена')], default='Создана', verbose_name='Статус')),
                ('client_mailing', models.ManyToManyField(to='client.client', verbose_name='Получатели')),
            ],
            options={
                'verbose_name': 'рассылка',
                'verbose_name_plural': 'рассылки',
                'permissions': [('set_deactivate', 'Can deactivate mailing'), ('view_all_mailing', 'Can view all mailing')],
            },
        ),
    ]
